set -e

use_python() {
  if [ -n "$(which pyenv)" ]; then
    local pyversion=$1
    eval "$(pyenv init -)"
    pyenv local ${pyversion} || log_error "Could not find pyenv version '${pyversion}'. Consider running 'pyenv install ${pyversion}'"
  fi
}

layout_poetry() {
  if [[ -f backend/pyproject.toml ]]; then
    local VENV=$( cd backend && poetry show -v|grep "Using virtualenv:"|cut -f 3 -d " " 2>/dev/null)
    export VIRTUAL_ENV=$VENV
    PATH_add "$VIRTUAL_ENV/bin"
  fi
}

layout_virtualenv() {
  if [ ! -d ".venv" ] ; then
    echo "Installing virtualenv for $(python -V)"
    python -m venv .venv
  fi
  echo "Activating $(python -V) virtualenv"
  source .venv/bin/activate
}

# check if python version is set in current dir
pyversion=$(head .python-version)
pvenv=$(basename $PWD)

use python ${pyversion}
layout virtualenv
layout poetry
